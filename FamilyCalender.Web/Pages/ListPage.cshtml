@page
@using FamilyCalender.Core.Models.Entities
@model FamilyCalender.Web.Pages.ListPageModel
@{
	ViewData["Title"] = "Mina listor";
}
<div class="d-block d-md-none">
	<a asp-page="/CalendarOverview"
	   asp-route-calendarId="@Model.CalendarId"
	   class="btn btn-pmf fixed-btn"
	   title="Tillbaka till kalendern">
		<i class="fa-regular fa-calendar-alt"></i>
	</a>
</div>
@if (Model.CalendarId.HasValue)
{
	<h2><i class="bi bi-calendar"></i> @Model.CalendarName</h2>
}
else
{
	<h2>Alla dina listor</h2>
}
<div class="d-flex align-items-center">
	<a href="/CalendarOverview" class="btn btn-outline-dark btn-sm">
		<i class="bi bi-arrow-left"></i> Tillbaka
	</a>
</div>
<hr />
<button type="button" class="btn btn-pmf mb-3" data-bs-toggle="modal" data-bs-target="#createListModal">
	Skapa ny lista
</button>
<div id="listPage-container">
	@if (Model.Lists.Any())
	{
		<div id="listsContainer" data-calendar-id="@Model.CalendarId" class="d-flex flex-wrap gap-3">
			@foreach (var list in Model.Lists.OrderBy(l => l.SortOrder))
			{
				<div class="col-12 col-sm-6 col-md-4 col-lg-3 list-card"
					 data-id="@list.Id"
					 data-url="@Url.Page("/HandleList", new { listId = list.Id, calendarName = Model.CalendarName })">

					<div class="card h-100 position-relative">
						<div class="card-body">
							<h5 class="card-title">
                                <span class="editable-text">@list.Name</span>
                            </h5>
							<span class="badge rounded-pill bg-dark bg-opacity-25 fw-lighter">
								@list.Type
							</span>
						</div>

						<button type="button"
								class="border-0 bg-transparent text-danger position-absolute top-0 end-0 m-2"
								aria-label="Ta bort listan"
								data-bs-toggle="modal"
								data-bs-target="#confirmDeleteModal"
								data-list-id="@list.Id"
								data-list-name="@list.Name"
								onclick="event.stopPropagation();">
							<i class="bi bi-trash"></i>
						</button>
						<div class="drag-handle position-absolute top-50 end-0 me-2">☰</div>

					</div>
				</div>
			}
		</div>
	}

	else
	{
		<p>Inga listor att visa.</p>
	}

</div>

<!-- Modal for adding list -->
<div class="modal fade" id="createListModal" tabindex="-1" aria-labelledby="createListModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form method="post" id="createListForm" asp-page-handler="CreateNewList">
				<div class="modal-header">
					<h5 class="modal-title" id="createListModalLabel">Ny lista</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Stäng"></button>
				</div>
				<div class="modal-body">
					<div class="mb-3">
						<label for="NewListName" class="form-label">Namn på listan</label>
						<input type="text" id="NewListName" name="NewListName" class="form-control" value="@Model.NewListName" />
						<span asp-validation-for="NewListName" class="text-danger"></span>
					</div>
					<div class="btn-group w-100" role="group" aria-label="Listtyp">
						<input type="radio" class="btn-check" name="NewListType" id="btn-todo" value="Todolist" autocomplete="off" checked>
						<label class="btn btn-pmf-outline w-100" for="btn-todo">Att göra</label>

						<input type="radio" class="btn-check" name="NewListType" id="btn-checklist" value="Checklist" autocomplete="off">
						<label class="btn btn-pmf-outline w-100" for="btn-checklist">Checklista</label>

						@* 						<input type="radio" class="btn-check" name="NewListType" id="btn-notes" value="Notes" autocomplete="off">
						<label class="btn btn-pmf-outline w-100" for="btn-notes">Anteckningar</label>  *@

					</div>

					<input type="hidden" asp-for="CalendarId" />
					<input type="hidden" asp-for="CalendarName" />
				</div>
				<div class="modal-footer">
					<button type="submit" class="btn btn-pmf">Skapa</button>
					<button type="button" class="btn btn-pmf-inverted" data-bs-dismiss="modal">Avbryt</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Modal for removing list-->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form method="post" asp-page-handler="DeleteList">
				<div class="modal-header">
					<h5 class="modal-title" id="confirmDeleteLabel">Bekräfta borttagning</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Stäng"></button>
				</div>
				<div class="modal-body">
					<p>Är du säker på att du vill ta bort listan <strong id="listNamePreview"></strong>?</p>
					<input type="hidden" name="UserListId" id="deleteListId" />
					<input type="hidden" asp-for="CalendarId" />
					<input type="hidden" asp-for="CalendarName" />
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Avbryt</button>
					<button type="submit" class="btn btn-danger">Ta bort</button>
				</div>
			</form>
		</div>
	</div>
</div>
<style>
	.btn-check:checked + .btn {
		box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.15);
	}

	/* För extra tydlig aktiv stil per typ */
	.btn-check:checked + .btn-pmf-outline {
		background-color: var(--pmf-blue);
		color: #fff;
		border-color: var(--pmf-blue);
	}

	.btn-check:checked + .btn-pmf-inverted {
		background-color: #fff;
		color: var(--pmf-yellow);
		border-color: var(--pmf-yellow);
	}
</style>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', () => {

            /* ============================================================
               Validera skapa-lista formulär
            ============================================================= */
            const createListForm = document.getElementById('createListForm');
            createListForm.addEventListener('submit', function (e) {
                const input = document.getElementById('NewListName');
                const errorSpan = document.querySelector('[data-valmsg-for="NewListName"]');

                if (!input.value.trim()) {
                    e.preventDefault();
                    errorSpan.textContent = 'Listan måste ha ett namn';
                    input.classList.add('is-invalid');
                } else {
                    errorSpan.textContent = '';
                    input.classList.remove('is-invalid');
                }
            });

            /* ============================================================
               Gör texten redigerbar
            ============================================================= */
            document.querySelectorAll('.editable-text').forEach(el => {
                el.dataset.originalName = el.textContent.trim();

                el.addEventListener('click', e => {
                    e.stopPropagation(); // förhindra navigering
                    el.setAttribute('contenteditable', 'true');
                    el.focus();

                    // Placera caret sist i texten
                    const range = document.createRange();
                    range.selectNodeContents(el);
                    range.collapse(false);
                    const sel = window.getSelection();
                    sel.removeAllRanges();
                    sel.addRange(range);
                });

                el.addEventListener('keydown', e => {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        el.blur();
                    }
                });

                el.addEventListener('blur', async () => {
                    el.removeAttribute('contenteditable');

                    const card = el.closest('.list-card');
                    const listId = card.dataset.id;
                    const newName = el.textContent.trim();

                    if (!newName) {
                        el.textContent = el.dataset.originalName || '';
                        return;
                    }

                    const response = await fetch('?handler=UpdateListName', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify({ id: parseInt(listId), name: newName })
                    });

                    const result = await response.json();
                    if (!result.success) {
                        alert('Kunde inte uppdatera listan.');
                        el.textContent = el.dataset.originalName || '';
                    } else {
                        el.dataset.originalName = newName;
                    }
                });
            });

            /* ============================================================
               Drag and drop för listor
            ============================================================= */
            function initSortableLists(containerId, updateUrl) {
                const container = document.getElementById(containerId);
                if (!container) return;

                new Sortable(container, {
                    animation: 150,
                    delay: 200,
                    delayOnTouchOnly: true,
                    handle: '.drag-handle',
                    filter: 'input, button',
                    preventOnFilter: false,
                    onEnd: function () {
                        const sortedIds = Array.from(container.children).map(el => parseInt(el.dataset.id));

                        fetch(updateUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({
                                calendarId: parseInt(container.dataset.calendarId || 0),
                                sortedIds: sortedIds
                            })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (!data.success) {
                                alert('Kunde inte spara ordningen på servern');
                            }
                        })
                        .catch(err => {
                            console.error(err);
                            alert('Fel vid uppdatering av ordning');
                        });
                    }
                });
            }

            initSortableLists('listsContainer', '@Url.Page("/ListPage", "UpdateListOrder")');

            /* ============================================================
               Ställ in delete-modal med lista som ska tas bort
            ============================================================= */
            const deleteModal = document.getElementById('confirmDeleteModal');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const listId = button.getAttribute('data-list-id');
                const listName = button.getAttribute('data-list-name');

                const input = deleteModal.querySelector('#deleteListId');
                const namePreview = deleteModal.querySelector('#listNamePreview');

                input.value = listId;
                namePreview.textContent = listName;
            });

            /* ============================================================
               Klick på lista navigerar till rätt sida
            ============================================================= */
            document.querySelectorAll('.list-card').forEach(card => {
                card.addEventListener('click', function () {
                    const url = card.getAttribute('data-url');
                    if (url) window.location.href = url;
                });
            });

            /* ============================================================
               Aktivera Bootstrap-tooltips
            ============================================================= */
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl);
            });

        }); // DOMContentLoaded slut
    </script>
}


