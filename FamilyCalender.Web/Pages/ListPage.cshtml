@page
@using FamilyCalender.Core.Models.Entities
@model FamilyCalender.Web.Pages.ListPageModel
@{
	ViewData["Title"] = "Mina listor";
}


@if (Model.CalendarId.HasValue)
{
	<h2>Listor kopplade till kalender: @Model.CalendarName</h2>
}
else
{
	<h2>Alla dina listor</h2>
}

@if (Model.Lists.Any())
{
	<div class="d-flex flex-wrap gap-3">
		@foreach (var list in Model.Lists)
		{
			<div class="col-12 col-sm-6 col-md-4 col-lg-3">
				<div class="card h-100 position-relative list-card"
					 data-url="@Url.Page("/HandleList", new { listId = list.Id, calendarName = Model.CalendarName })">

					<div class="card-body">
						<h5 class="card-title">@list.Name</h5>
						<span class="badge bg-primary">
							@{
								var text = list.Type switch
								{
									ListTypeEnum.Todolist => "Att göra-lista",
									ListTypeEnum.Checklist => "Checklista",
									_ => "Okänd"
								};
							}
							@text
						</span>
					</div>

					<button type="button"
							class="btn btn-sm btn-danger position-absolute top-0 end-0 m-2"
							aria-label="Ta bort listan"
							data-bs-toggle="modal"
							data-bs-target="#confirmDeleteModal"
							data-list-id="@list.Id"
							data-list-name="@list.Name"
							onclick="event.stopPropagation();">
						<i class="bi bi-trash"></i>
					</button>
				</div>
			</div>
		}
	</div>
	<br />
}
else
{
	<p>Inga listor att visa.</p>
}

<button type="button" class="btn btn-pmf mb-3" data-bs-toggle="modal" data-bs-target="#createListModal">
	Skapa ny lista
</button>

<!-- Modal for adding list -->
<div class="modal fade" id="createListModal" tabindex="-1" aria-labelledby="createListModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form method="post" id="createListForm" asp-page-handler="CreateNewList">
				<div class="modal-header">
					<h5 class="modal-title" id="createListModalLabel">Ny lista</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Stäng"></button>
				</div>
				<div class="modal-body">
					<div class="mb-3">
						<label for="NewListName" class="form-label">Namn på listan</label>
						<input type="text" id="NewListName" name="NewListName" class="form-control" value="@Model.NewListName" />
						<span asp-validation-for="NewListName" class="text-danger"></span>
					</div>
					<div class="btn-group w-75" role="group" aria-label="Listtyp">
						<input type="radio" class="btn-check" name="NewListType" id="btn-todo" value="Todolist" autocomplete="off" checked>
						<label class="btn btn-pmf-outline w-100" for="btn-todo">Att göra</label>

						<input type="radio" class="btn-check" name="NewListType" id="btn-checklist" value="Checklist" autocomplete="off">
						<label class="btn btn-pmf-outline w-100" for="btn-checklist">Checklista</label>

@* 						<input type="radio" class="btn-check" name="NewListType" id="btn-notes" value="Notes" autocomplete="off">
						<label class="btn btn-pmf-outline w-100" for="btn-notes">Anteckningar</label>  *@

					</div>
						<i class="bi bi-question-circle-fill ms-2" data-bs-toggle="tooltip" data-bs-placement="top" title="En att göra-lista låter dig lägga till uppgifter som du vill bocka av, medan en checklista kan återanvändas."></i>

					<input type="hidden" asp-for="CalendarId" />
					<input type="hidden" asp-for="CalendarName" />
				</div>
				<div class="modal-footer">
					<button type="submit" class="btn btn-pmf">Skapa</button>
					<button type="button" class="btn btn-pmf-inverted" data-bs-dismiss="modal">Avbryt</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Modal for removing list-->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form method="post" asp-page-handler="DeleteList">
				<div class="modal-header">
					<h5 class="modal-title" id="confirmDeleteLabel">Bekräfta borttagning</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Stäng"></button>
				</div>
				<div class="modal-body">
					<p>Är du säker på att du vill ta bort listan <strong id="listNamePreview"></strong>?</p>
					<input type="hidden" name="UserListId" id="deleteListId" />
					<input type="hidden" asp-for="CalendarId" />
					<input type="hidden" asp-for="CalendarName" />
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Avbryt</button>
					<button type="submit" class="btn btn-danger">Ta bort</button>
				</div>
			</form>
		</div>
	</div>
</div>
<style>
	.btn-check:checked + .btn {
		box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.15);
	}

	/* För extra tydlig aktiv stil per typ */
	.btn-check:checked + .btn-pmf-outline {
		background-color: var(--pmf-blue);
		color: #fff;
		border-color: var(--pmf-blue);
	}

	.btn-check:checked + .btn-pmf-inverted {
		background-color: #fff;
		color: var(--pmf-yellow);
		border-color: var(--pmf-yellow);
	}
</style>
@section Scripts {
	<partial name="_ValidationScriptsPartial" />

	<script>
		document.getElementById('createListForm').addEventListener('submit', function (e) {
			const input = document.getElementById('NewListName');
			const errorSpan = document.querySelector('[data-valmsg-for="NewListName"]');

			if (!input.value.trim()) {
				e.preventDefault(); // Stoppa formuläret från att skickas
				errorSpan.textContent = 'Listan måste ha ett namn';
				input.classList.add('is-invalid');
			} else {
				errorSpan.textContent = '';
				input.classList.remove('is-invalid');
			}
		});
	</script>
	<script>
		const deleteModal = document.getElementById('confirmDeleteModal');
		deleteModal.addEventListener('show.bs.modal', function (event) {
			const button = event.relatedTarget;
			const listId = button.getAttribute('data-list-id');
			const listName = button.getAttribute('data-list-name');

			const input = deleteModal.querySelector('#deleteListId');
			const namePreview = deleteModal.querySelector('#listNamePreview');

			input.value = listId;
			namePreview.textContent = listName;
		});
	</script>
	<script>
		document.querySelectorAll('.list-card').forEach(card => {
			card.addEventListener('click', function () {
				const url = card.getAttribute('data-url');
				if (url) window.location.href = url;
			});
		});
	</script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
			tooltipTriggerList.forEach(function (tooltipTriggerEl) {
				new bootstrap.Tooltip(tooltipTriggerEl)
			})
		});

	</script>
}
